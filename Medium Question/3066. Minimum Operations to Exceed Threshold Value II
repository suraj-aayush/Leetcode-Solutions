class Solution {
public:
    int minOperations(vector<int>& nums, int k) {
        int c = 0;
priority_queue<long long, vector<long long>, greater<long long>>pq(nums.begin(), nums.end());
        while(pq.size() > 1 && pq.top() < k)
        {
            long long n1 = pq.top();
            pq.pop();
            long long n2 = pq.top();
            pq.pop();
            long long val = (min(n1, n2)*2) + (max(n1,n2));
            pq.push(val);

            c++;
        }

        return c;
    }
};
