class Solution {
public:

int solve(int i, int j, vector<vector<int>>&dp)
{
    if(i==0&& j==0)
    return 1;

    if(i<0||j<0)
    return 0;

    if(dp[i][j] != -1)
    return dp[i][j];

int up=0, upLeft=0;

    if(i>0)
    up = solve(i-1, j, dp);
    if(j>0)
    upLeft = solve(i, j-1, dp);

    return dp[i][j] = up+upLeft;

}

    int uniquePaths(int m, int n) {
        // vector<vector<int>>dp(m, vector<int>(n, -1));
        // return solve(m-1, n-1, dp);

// Tabulation Code
vector<int> dp(n, 1); // Single row DP

    for (int i = 1; i < m; i++) {
        for (int j = 1; j < n; j++) {
            dp[j] += dp[j - 1]; // Update in-place
        }
    }

    return dp[n - 1];

    }
};
