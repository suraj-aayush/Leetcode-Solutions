class Solution {
public:

int dfs(int i, int j, vector<vector<int>>&grid)
{
    int m=grid.size();
    int n=grid[0].size();

if(i<0||i>=m||j<0||j>=n||grid[i][j]==0) 
return 0;

int cur = grid[i][j];
grid[i][j] = 0;

cur += dfs(i, j-1, grid);
cur += dfs(i, j+1, grid);
cur += dfs(i-1, j, grid);
cur += dfs(i+1, j, grid);

return cur;

}

    int findMaxFish(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        int maxi=0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j] > 0)
                {
                    maxi = max(maxi, dfs(i, j, grid));
                }
            }
        }

        return maxi;
    }
};
