class Solution {
public:
int c=0;
void dfs(int node, vector<int>adj[], vector<int>&vis)
{
        vis[node] = 1;

        for(auto it: adj[node])
        {
            if(!vis[it])
            {
                dfs(it, adj, vis);
            }
        }
}
    int findCircleNum(vector<vector<int>>& matrix) {
        int n = matrix.size();
        vector<int>adj[n];
for(int i=0;i<n;i++)
{
    for(int j=0;j<n;j++)
    {
        if(matrix[i][j] == 1)
        {
            adj[i].push_back(j);
            adj[j].push_back(i);
        }
    }
}
        vector<int>vis(n,0);
        for(int i=0;i<n;i++)
        {
            if(!vis[i])
            {
                c++;
                dfs(i, adj, vis);
            }   
        }
        return c;
    }
};
