// Solution 1

class Solution {
public:
    long long countSubarrays(vector<int>& nums, int k) {
        int mx = *max_element(nums.begin(), nums.end());
        int n=nums.size();
        int l=0, r=0, c=0;
        long long ans = 0;
        while(r < n)
        {
            if(nums[r] == mx)
            c++;

            while(c >= k)
            {
                ans += n-r;

                if(nums[l] == mx)
                {
                    c--;
                }

                l++;
            }
            
            r++;
        }

        return ans;
    }
};


// SOLUTION 2


class Solution {
public:
    long long countSubarrays(vector<int>& nums, int k) {
        int n=nums.size();
        int i=0,j=0;
        int c=0;
        long long result = 0;
        int mx = *max_element(nums.begin(), nums.end());
        while(j<n)
        {
            if(nums[j] == mx)
            c++;
            while(c >= k)
            {
                result += n-j;
                if(nums[i] ==mx)
                c--;

                i++;
            }
            j++;            
        }
        return result;
    }
};
