class ProductOfNumbers {
public:
    vector<int> prefixProduct;  // Stores cumulative product
    ProductOfNumbers() {
        prefixProduct = {1};  // Initialize with 1 for easier multiplication
    }
    
    void add(int num) {
        if (num == 0) {
            prefixProduct = {1};  // Reset the product list when encountering zero
        } else {
            prefixProduct.push_back(prefixProduct.back() * num);
        }
    }
    
    int getProduct(int k) {
        int size = prefixProduct.size();
        if (k >= size) return 0;  // If there was a zero, return 0
        return prefixProduct.back() / prefixProduct[size - k - 1];
    }
};
