class Solution {
public:

int dp[1001][1001];

int solve(int curA, int clipA, int n)
{
    if(curA==n)
    return 0;

if(curA > n)
return 100000; // return any big number to cancel out this case when taking min(paste,...)


if(dp[curA][clipA] != -1)
return dp[curA][clipA];

    int copyAllPaste = 1 + 1 + solve(curA + curA, curA, n);
    int paste = 1 + solve(curA + clipA, clipA, n);

dp[curA][clipA] = min(paste, copyAllPaste);
    // return min(paste, copyAllPaste);

    return dp[curA][clipA];

}

    int minSteps(int n) {
        if(n==1)
        return 0;
        memset(dp, -1, sizeof(dp));
        return 1 + solve(1, 1, n);
    }
};
