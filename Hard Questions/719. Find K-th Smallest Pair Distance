class Solution {
public:
    int smallestDistancePair(vector<int>& nums, int k) {

int n = nums.size();
int maxi =*max_element(nums.begin(), nums.end());
vector<int>v(maxi+1, 0);
    for(int i=0;i<nums.size();i++)
        {
            for(int j=i+1; j<nums.size();j++)
            {
                int diff = abs(nums[i] - nums[j]);
                v[diff]++;
            }
        }
for(int i=0;i<maxi+1;i++)
{
    k-=v[i];
    if(k<=0)
    return i;
}

 return -1;


        //  B R U T E   F O R C E

        // int ans=0;
        // // { diff, num[i], nums[j] }
        // vector<vector<int>>v;
        // for(int i=0;i<nums.size()-1;i++)
        // {
        //     for(int j=i+1; j<nums.size();j++)
        //     {
        //         int diff = abs(nums[i] - nums[j]);
        //         v.push_back({diff, nums[i], nums[j]});
        //     }
        // }
        // sort(v.begin(), v.end());
        // ans = v[k-1][0];

        // return ans;



    }
};
